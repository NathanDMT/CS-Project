<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        r//wf3YoaIH/GIpyAAAAAElFTkSuQmCC
</value>
  </data>
</root>